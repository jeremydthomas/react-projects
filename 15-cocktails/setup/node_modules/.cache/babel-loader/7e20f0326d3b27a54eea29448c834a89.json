{"ast":null,"code":"var _jsxFileName = \"/home/saucebox11/projects/react-projects/15-cocktails/setup/src/context.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [cocktails, setCocktails] = useState([]);\n  const fetchCocktails = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const {\n        drinks\n      } = data;\n\n      if (drinks) {\n        const newCocktails = drinks.map(item => {\n          const {\n            strDrinkThumb,\n            strDrink,\n            strGlass,\n            strAlcoholic,\n            idDrink\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            glass: strGlass,\n            alcohol: strAlcoholic,\n            id: idDrink,\n            img: strDrinkThumb\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchCocktails();\n  }, [searchTerm]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      loading,\n      cocktails,\n      setSearchTerm,\n      setCocktails,\n      setLoading,\n      fetchCocktails\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/home/saucebox11/projects/react-projects/15-cocktails/setup/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchCocktails","response","fetch","data","json","drinks","newCocktails","map","item","strDrinkThumb","strDrink","strGlass","strAlcoholic","idDrink","id","name","glass","alcohol","img","error","console","log","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG,2DAAZ;AACA,MAAMC,UAAU,GAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMe,cAAc,GAAGZ,WAAW,CAAC,YAAY;AAC9CO,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACH,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAI,GAAEO,UAAW,EAArB,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAaF,IAAnB;;AACA,UAAIE,MAAJ,EAAY;AACX,cAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AACzC,gBAAM;AAAEC,YAAAA,aAAF;AAAiBC,YAAAA,QAAjB;AAA2BC,YAAAA,QAA3B;AAAqCC,YAAAA,YAArC;AAAmDC,YAAAA;AAAnD,cACLL,IADD;AAEA,iBAAO;AACNM,YAAAA,EAAE,EAAED,OADE;AAENE,YAAAA,IAAI,EAAEL,QAFA;AAGNM,YAAAA,KAAK,EAAEL,QAHD;AAINM,YAAAA,OAAO,EAAEL,YAJH;AAKNE,YAAAA,EAAE,EAAED,OALE;AAMNK,YAAAA,GAAG,EAAET;AANC,WAAP;AAQA,SAXoB,CAArB;AAYAV,QAAAA,YAAY,CAACO,YAAD,CAAZ;AACA,OAdD,MAcO;AACNP,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACA;;AACDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAtBD,CAsBE,OAAOwB,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAxB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD,GA5BiC,EA4B/B,CAACC,UAAD,CA5B+B,CAAlC;AA6BAT,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,cAAc;AACd,GAFQ,EAEN,CAACJ,UAAD,CAFM,CAAT;AAIA,sBACC,oBAAC,UAAD,CAAY,QAAZ;AACC,IAAA,KAAK,EAAE;AACNF,MAAAA,OADM;AAENI,MAAAA,SAFM;AAGND,MAAAA,aAHM;AAINE,MAAAA,YAJM;AAKNJ,MAAAA,UALM;AAMNK,MAAAA;AANM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUEP,QAVF,CADD;AAcA,CApDD,C,CAqDA;;;AACA,OAAO,MAAM6B,gBAAgB,GAAG,MAAM;AACrC,SAAOpC,UAAU,CAACI,UAAD,CAAjB;AACA,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\n\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\n\tconst [cocktails, setCocktails] = useState([]);\n\n\tconst fetchCocktails = useCallback(async () => {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst response = await fetch(`${url}${searchTerm}`);\n\t\t\tconst data = await response.json();\n\t\t\tconst { drinks } = data;\n\t\t\tif (drinks) {\n\t\t\t\tconst newCocktails = drinks.map((item) => {\n\t\t\t\t\tconst { strDrinkThumb, strDrink, strGlass, strAlcoholic, idDrink } =\n\t\t\t\t\t\titem;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: idDrink,\n\t\t\t\t\t\tname: strDrink,\n\t\t\t\t\t\tglass: strGlass,\n\t\t\t\t\t\talcohol: strAlcoholic,\n\t\t\t\t\t\tid: idDrink,\n\t\t\t\t\t\timg: strDrinkThumb,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetCocktails(newCocktails);\n\t\t\t} else {\n\t\t\t\tsetCocktails([]);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [searchTerm]);\n\tuseEffect(() => {\n\t\tfetchCocktails();\n\t}, [searchTerm]);\n\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\tloading,\n\t\t\t\tcocktails,\n\t\t\t\tsetSearchTerm,\n\t\t\t\tsetCocktails,\n\t\t\t\tsetLoading,\n\t\t\t\tfetchCocktails,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t);\n};\n// make sure use\nexport const useGlobalContext = () => {\n\treturn useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"]},"metadata":{},"sourceType":"module"}