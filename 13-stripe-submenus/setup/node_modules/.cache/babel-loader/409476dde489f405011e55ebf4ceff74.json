{"ast":null,"code":"var _jsxFileName = \"/home/saucebox11/projects/react-projects/13-stripe-submenus/setup/src/context.js\";\nimport React, { useState, useContext } from \"react\";\nimport sublinks from \"./data\";\nconst AppContext = React.createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n  const [location, setLocation] = useState({});\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openSubmenu = (text, cordinates) => {\n    setIsSubmenuOpen(true);\n  };\n\n  const closeSubmenu = () => {\n    setIsSubmenuOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      openSidebar,\n      closeSidebar,\n      isSidebarOpen,\n      isSubmenuOpen,\n      openSubmenu,\n      closeSubmenu,\n      sublinks\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, children);\n}; // custom hook\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};","map":{"version":3,"sources":["/home/saucebox11/projects/react-projects/13-stripe-submenus/setup/src/context.js"],"names":["React","useState","useContext","sublinks","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isSubmenuOpen","setIsSubmenuOpen","location","setLocation","openSidebar","closeSidebar","openSubmenu","text","cordinates","closeSubmenu","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMa,WAAW,GAAG,MAAM;AACzBL,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AAC1BN,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,GAFD;;AAIA,QAAMO,WAAW,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AACzCP,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,GAFD;;AAIC,QAAMQ,YAAY,GAAG,MAAM;AAC1BR,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,GAFD;;AAID,sBACC,oBAAC,UAAD,CAAY,QAAZ;AACC,IAAA,KAAK,EAAE;AACNG,MAAAA,WADM;AAENC,MAAAA,YAFM;AAGNP,MAAAA,aAHM;AAINE,MAAAA,aAJM;AAKNM,MAAAA,WALM;AAMNG,MAAAA,YANM;AAONhB,MAAAA;AAPM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWEI,QAXF,CADD;AAeA,CAnCM,C,CAqCP;;AACA,OAAO,MAAMa,gBAAgB,GAAG,MAAM;AACrC,SAAOlB,UAAU,CAACE,UAAD,CAAjB;AACA,CAFM","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport sublinks from \"./data\";\n\nconst AppContext = React.createContext();\n\nexport const AppProvider = ({ children }) => {\n\tconst [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\tconst [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n\tconst [location, setLocation] = useState({});\n\tconst openSidebar = () => {\n\t\tsetIsSidebarOpen(true);\n\t};\n\n\tconst closeSidebar = () => {\n\t\tsetIsSidebarOpen(false);\n\t};\n\n\tconst openSubmenu = (text, cordinates) => {\n\t\tsetIsSubmenuOpen(true);\n\t};\n\n\t\tconst closeSubmenu = () => {\n\t\t\tsetIsSubmenuOpen(false);\n\t\t};\n\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\topenSidebar,\n\t\t\t\tcloseSidebar,\n\t\t\t\tisSidebarOpen,\n\t\t\t\tisSubmenuOpen,\n\t\t\t\topenSubmenu,\n\t\t\t\tcloseSubmenu,\n\t\t\t\tsublinks,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t);\n};\n\n// custom hook\nexport const useGlobalContext = () => {\n\treturn useContext(AppContext);\n};\n"]},"metadata":{},"sourceType":"module"}