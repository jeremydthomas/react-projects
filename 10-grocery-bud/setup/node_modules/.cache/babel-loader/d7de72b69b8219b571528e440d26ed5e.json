{"ast":null,"code":"var _jsxFileName = \"/home/saucebox11/projects/react-projects/10-grocery-bud/setup/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nfunction App() {\n  const [list, setList] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [editIndex, setEditIndex] = useState(null); // useEffect(() => {\n  // \tconst data = localStorage.getItem(\"list\");\n  // \tif (data) {\n  // \t\tsetList(data);\n  // \t}\n  // }, []);\n\n  const handleSubmit = e => {\n    try {\n      e.preventDefault();\n\n      if (!list) {\n        // display alert if list is empty\n        setAlert({\n          show: true,\n          msg: \"Please Enter a Value\",\n          type: \"alert alert-danger\"\n        });\n      } else if (list && isEditing) {// deal with editing list\n      } else {\n        // show alert if list is not empty\n        setAlert({\n          show: true,\n          msg: \"Item Added To The List\",\n          type: \"alert alert-success\"\n        });\n        const newItem = {\n          id: new Date().getTime().toString(),\n          title: list\n        };\n        setItems([...items, newItem]);\n        setList(\"\");\n        localStorage.setItem(\"list\", list);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"grocery-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    setAlert: setAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"grocery bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g. eggs\",\n    value: list,\n    onChange: e => setList(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, isEditing ? \"update\" : \"submit\"))), items.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: items,\n    setItems: setItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, \"clear items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/saucebox11/projects/react-projects/10-grocery-bud/setup/src/App.js"],"names":["React","useState","useEffect","List","Alert","App","list","setList","items","setItems","alert","setAlert","show","msg","type","isEditing","setIsEditing","editIndex","setEditIndex","handleSubmit","e","preventDefault","newItem","id","Date","getTime","toString","title","localStorage","setItem","error","console","log","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nfunction App() {\n\tconst [list, setList] = useState(\"\");\n\tconst [items, setItems] = useState([]);\n\tconst [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\n\tconst [isEditing, setIsEditing] = useState(false);\n\tconst [editIndex, setEditIndex] = useState(null);\n\n\t// useEffect(() => {\n\t// \tconst data = localStorage.getItem(\"list\");\n\t// \tif (data) {\n\t// \t\tsetList(data);\n\t// \t}\n\t// }, []);\n\n\tconst handleSubmit = (e) => {\n\t\ttry {\n\t\t\te.preventDefault();\n\t\t\tif (!list) {\n\t\t\t\t// display alert if list is empty\n\t\t\t\tsetAlert({\n\t\t\t\t\tshow: true,\n\t\t\t\t\tmsg: \"Please Enter a Value\",\n\t\t\t\t\ttype: \"alert alert-danger\",\n\t\t\t\t});\n\t\t\t} else if (list && isEditing) {\n\t\t\t\t// deal with editing list\n\t\t\t} else {\n\t\t\t\t// show alert if list is not empty\n\t\t\t\tsetAlert({\n\t\t\t\t\tshow: true,\n\t\t\t\t\tmsg: \"Item Added To The List\",\n\t\t\t\t\ttype: \"alert alert-success\",\n\t\t\t\t});\n\n\t\t\t\tconst newItem = { id: new Date().getTime().toString(), title: list };\n\t\t\t\tsetItems([...items, newItem]);\n\t\t\t\tsetList(\"\");\n\t\t\t\tlocalStorage.setItem(\"list\", list);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<section className=\"section-center\">\n\t\t\t<form onSubmit={handleSubmit} className=\"grocery-form\">\n\t\t\t\t{alert.show && <Alert alert={alert} setAlert={setAlert} />}\n\t\t\t\t<h3>grocery bud</h3>\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"grocery\"\n\t\t\t\t\t\tplaceholder=\"e.g. eggs\"\n\t\t\t\t\t\tvalue={list}\n\t\t\t\t\t\tonChange={(e) => setList(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\" className=\"submit-btn\">\n\t\t\t\t\t\t{isEditing ? \"update\" : \"submit\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{items.length > 0 && (\n\t\t\t\t<div className=\"grocery-container\">\n\t\t\t\t\t<List items={items} setItems={setItems} />\n\t\t\t\t\t<button className=\"clear-btn\">clear items</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</section>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}