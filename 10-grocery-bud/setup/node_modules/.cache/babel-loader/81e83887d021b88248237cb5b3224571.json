{"ast":null,"code":"var _jsxFileName = \"/home/saucebox11/projects/react-projects/10-grocery-bud/setup/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nconst getLocalStorage = () => {\n  const items = localStorage.getItem(\"items\");\n  return items ? JSON.parse(localStorage.getItem(\"items\")) : [];\n};\n\nfunction App() {\n  const [list, setList] = useState(\"\");\n  const [items, setItems] = useState(getLocalStorage());\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [editIndex, setEditIndex] = useState(null);\n\n  const clearItems = () => {\n    showAlert(true, \"empty list\", \"danger\");\n    setItems([]);\n  };\n\n  const handleSubmit = e => {\n    try {\n      e.preventDefault();\n\n      if (!list) {\n        // display alert if list is empty\n        showAlert(true, \"please enter a value\", \"danger\");\n      } else if (list && isEditing) {\n        // deal with editing list\n        setItems(items.map(item => {\n          if (item.id === editIndex) {\n            return { ...item,\n              title: list\n            };\n          }\n\n          return item;\n        }));\n        setList(\"\");\n        setEditIndex(null);\n        setIsEditing(false);\n        showAlert(true, \"list updated\", \"success\");\n      } else {\n        // show alert if list is not empty\n        showAlert(true, \"Item Added To The List\", \"success\");\n        const newItem = {\n          id: new Date().getTime().toString(),\n          title: list\n        };\n        setItems([...items, newItem]);\n        setList(\"\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const showAlert = (show, msg, type) => {\n    setAlert({\n      show,\n      msg,\n      type\n    });\n  };\n\n  const handleDelete = id => {\n    showAlert(true, \"Item Deleted\", \"danger\");\n    const newItems = items.filter(item => item.id !== id);\n    setItems(newItems);\n  };\n\n  const handleEdit = id => {\n    const item = items.find(item => item.id === id);\n    setIsEditing(true);\n    setEditIndex(id);\n    setList(item.title);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(items)); // const data = localStorage.getItem(\"items\");\n    // if (data) {\n    // \tsetList(data);\n    // }\n  }, [items]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"grocery-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, alert, {\n    items: items,\n    removeAlert: showAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"grocery bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g. eggs\",\n    value: list,\n    onChange: e => setList(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }, isEditing ? \"update\" : \"submit\"))), items.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: items,\n    handleEdit: handleEdit,\n    handleDelete: handleDelete,\n    setItems: setItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: clearItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, \"clear items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/saucebox11/projects/react-projects/10-grocery-bud/setup/src/App.js"],"names":["React","useState","useEffect","List","Alert","getLocalStorage","items","localStorage","getItem","JSON","parse","App","list","setList","setItems","alert","setAlert","show","msg","type","isEditing","setIsEditing","editIndex","setEditIndex","clearItems","showAlert","handleSubmit","e","preventDefault","map","item","id","title","newItem","Date","getTime","toString","error","console","log","handleDelete","newItems","filter","handleEdit","find","setItem","stringify","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nconst getLocalStorage = () => {\n\tconst items = localStorage.getItem(\"items\");\n\treturn items ? JSON.parse(localStorage.getItem(\"items\")) : [];\n};\n\nfunction App() {\n\tconst [list, setList] = useState(\"\");\n\tconst [items, setItems] = useState(getLocalStorage());\n\tconst [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\n\tconst [isEditing, setIsEditing] = useState(false);\n\tconst [editIndex, setEditIndex] = useState(null);\n\n\tconst clearItems = () => {\n\t\tshowAlert(true, \"empty list\", \"danger\");\n\t\tsetItems([]);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\ttry {\n\t\t\te.preventDefault();\n\t\t\tif (!list) {\n\t\t\t\t// display alert if list is empty\n\n\t\t\t\tshowAlert(true, \"please enter a value\", \"danger\");\n\t\t\t} else if (list && isEditing) {\n\t\t\t\t// deal with editing list\n\t\t\t\tsetItems(\n\t\t\t\t\titems.map((item) => {\n\t\t\t\t\t\tif (item.id === editIndex) {\n\t\t\t\t\t\t\treturn { ...item, title: list };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tsetList(\"\");\n\t\t\t\tsetEditIndex(null);\n\t\t\t\tsetIsEditing(false);\n\t\t\t\tshowAlert(true, \"list updated\", \"success\");\n\t\t\t} else {\n\t\t\t\t// show alert if list is not empty\n\t\t\t\tshowAlert(true, \"Item Added To The List\", \"success\");\n\n\t\t\t\tconst newItem = { id: new Date().getTime().toString(), title: list };\n\t\t\t\tsetItems([...items, newItem]);\n\t\t\t\tsetList(\"\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst showAlert = (show, msg, type) => {\n\t\tsetAlert({ show, msg, type });\n\t};\n\n\tconst handleDelete = (id) => {\n\t\tshowAlert(true, \"Item Deleted\", \"danger\");\n\t\tconst newItems = items.filter((item) => item.id !== id);\n\t\tsetItems(newItems);\n\t};\n\n\tconst handleEdit = (id) => {\n\t\tconst item = items.find((item) => item.id === id);\n\t\tsetIsEditing(true);\n\t\tsetEditIndex(id);\n\t\tsetList(item.title);\n\t};\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"items\", JSON.stringify(items));\n\t\t// const data = localStorage.getItem(\"items\");\n\t\t// if (data) {\n\t\t// \tsetList(data);\n\t\t// }\n\t}, [items]);\n\n\treturn (\n\t\t<section className=\"section-center\">\n\t\t\t<form onSubmit={handleSubmit} className=\"grocery-form\">\n\t\t\t\t{alert.show && (\n\t\t\t\t\t<Alert {...alert} items={items} removeAlert={showAlert} />\n\t\t\t\t)}\n\t\t\t\t<h3>grocery bud</h3>\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"grocery\"\n\t\t\t\t\t\tplaceholder=\"e.g. eggs\"\n\t\t\t\t\t\tvalue={list}\n\t\t\t\t\t\tonChange={(e) => setList(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\" className=\"submit-btn\">\n\t\t\t\t\t\t{isEditing ? \"update\" : \"submit\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{items.length > 0 && (\n\t\t\t\t<div className=\"grocery-container\">\n\t\t\t\t\t<List\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t\thandleEdit={handleEdit}\n\t\t\t\t\t\thandleDelete={handleDelete}\n\t\t\t\t\t\tsetItems={setItems}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"clear-btn\" onClick={clearItems}>\n\t\t\t\t\t\tclear items\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</section>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}