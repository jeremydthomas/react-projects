{"ast":null,"code":"const reducer = (state, action) => {\n  if (action.type === \"CLEAR_CART\") {\n    return { ...state,\n      cart: []\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    return { ...state,\n      cart: state.cart.filter(cartItem => cartItem.id !== action.payload)\n    };\n  }\n\n  if (action.type === \"INCREASE\") {\n    let tempCart = state.cart.map(cartItem => {\n      if (cartItem.id === action.payload) {\n        return { ...cartItem,\n          amount: cartItem.amount + 1\n        };\n      }\n\n      return cartItem;\n    });\n    return { ...state,\n      cart: tempCart\n    };\n  }\n\n  if (action.type === \"DECREASE\") {\n    let tempCart = state.cart.map(cartItem => {\n      if (cartItem.id === action.payload) {\n        return { ...cartItem,\n          amount: cartItem.amount - 1\n        };\n      }\n\n      console.log(cartItem);\n      return cartItem;\n    }).filter(cartItem => cartItem.amount !== 0);\n    return { ...state,\n      cart: tempCart\n    };\n  }\n\n  if (action.type === \"GET_TOTALS\") {\n    const {\n      total,\n      amount\n    } = state.cart.reduce((cartTotal, cartItem) => {\n      const {\n        price,\n        amount\n      } = cartItem;\n      cartTotal.amount += amount;\n      console.log(cartTotal);\n      return cartTotal;\n    }, {\n      total: 0,\n      amount: 0\n    }).map((cartTotal, cartItem) => {\n      console.log(cartTotal, cartItem);\n    });\n    return { ...state,\n      total,\n      amount\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/saucebox11/projects/react-projects/14-cart/setup/src/reducer.js"],"names":["reducer","state","action","type","cart","filter","cartItem","id","payload","tempCart","map","amount","console","log","total","reduce","cartTotal","price"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AACjC,WAAO,EAAE,GAAGF,KAAL;AAAYG,MAAAA,IAAI,EAAE;AAAlB,KAAP;AACA;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC7B,WAAO,EACN,GAAGF,KADG;AAENG,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAmBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBL,MAAM,CAACM,OAAvD;AAFA,KAAP;AAIA;;AAED,MAAIN,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC/B,QAAIM,QAAQ,GAAGR,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAgBJ,QAAD,IAAc;AAC3C,UAAIA,QAAQ,CAACC,EAAT,KAAgBL,MAAM,CAACM,OAA3B,EAAoC;AACnC,eAAO,EAAE,GAAGF,QAAL;AAAeK,UAAAA,MAAM,EAAEL,QAAQ,CAACK,MAAT,GAAkB;AAAzC,SAAP;AACA;;AACD,aAAOL,QAAP;AACA,KALc,CAAf;AAMA,WAAO,EACN,GAAGL,KADG;AAENG,MAAAA,IAAI,EAAEK;AAFA,KAAP;AAIA;;AAED,MAAIP,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC/B,QAAIM,QAAQ,GAAGR,KAAK,CAACG,IAAN,CACbM,GADa,CACRJ,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAT,KAAgBL,MAAM,CAACM,OAA3B,EAAoC;AACnC,eAAO,EAAE,GAAGF,QAAL;AAAeK,UAAAA,MAAM,EAAEL,QAAQ,CAACK,MAAT,GAAkB;AAAzC,SAAP;AACA;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,aAAOA,QAAP;AACA,KAPa,EAQbD,MARa,CAQLC,QAAD,IAAcA,QAAQ,CAACK,MAAT,KAAoB,CAR5B,CAAf;AASA,WAAO,EACN,GAAGV,KADG;AAENG,MAAAA,IAAI,EAAEK;AAFA,KAAP;AAIA;;AAED,MAAIP,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AACjC,UAAM;AAAEW,MAAAA,KAAF;AAASH,MAAAA;AAAT,QAAoBV,KAAK,CAACG,IAAN,CACxBW,MADwB,CAExB,CAACC,SAAD,EAAYV,QAAZ,KAAyB;AACxB,YAAM;AAAEW,QAAAA,KAAF;AAASN,QAAAA;AAAT,UAAoBL,QAA1B;AACAU,MAAAA,SAAS,CAACL,MAAV,IAAoBA,MAApB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACA,aAAOA,SAAP;AACA,KARuB,EASxB;AACCF,MAAAA,KAAK,EAAE,CADR;AAECH,MAAAA,MAAM,EAAE;AAFT,KATwB,EAcxBD,GAdwB,CAcpB,CAACM,SAAD,EAAYV,QAAZ,KAAyB;AAC7BM,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ,EAAuBV,QAAvB;AACA,KAhBwB,CAA1B;AAkBA,WAAO,EAAE,GAAGL,KAAL;AAAYa,MAAAA,KAAZ;AAAmBH,MAAAA;AAAnB,KAAP;AACA;;AAED,SAAOV,KAAP;AACA,CAhED;;AAkEA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\n\tif (action.type === \"CLEAR_CART\") {\n\t\treturn { ...state, cart: [] };\n\t}\n\n\tif (action.type === \"REMOVE\") {\n\t\treturn {\n\t\t\t...state,\n\t\t\tcart: state.cart.filter((cartItem) => cartItem.id !== action.payload),\n\t\t};\n\t}\n\n\tif (action.type === \"INCREASE\") {\n\t\tlet tempCart = state.cart.map((cartItem) => {\n\t\t\tif (cartItem.id === action.payload) {\n\t\t\t\treturn { ...cartItem, amount: cartItem.amount + 1 };\n\t\t\t}\n\t\t\treturn cartItem;\n\t\t});\n\t\treturn {\n\t\t\t...state,\n\t\t\tcart: tempCart,\n\t\t};\n\t}\n\n\tif (action.type === \"DECREASE\") {\n\t\tlet tempCart = state.cart\n\t\t\t.map((cartItem) => {\n\t\t\t\tif (cartItem.id === action.payload) {\n\t\t\t\t\treturn { ...cartItem, amount: cartItem.amount - 1 };\n\t\t\t\t}\n\t\t\t\tconsole.log(cartItem);\n\t\t\t\treturn cartItem;\n\t\t\t})\n\t\t\t.filter((cartItem) => cartItem.amount !== 0);\n\t\treturn {\n\t\t\t...state,\n\t\t\tcart: tempCart,\n\t\t};\n\t}\n\n\tif (action.type === \"GET_TOTALS\") {\n\t\tconst { total, amount } = state.cart\n\t\t\t.reduce(\n\t\t\t\t(cartTotal, cartItem) => {\n\t\t\t\t\tconst { price, amount } = cartItem;\n\t\t\t\t\tcartTotal.amount += amount;\n\n\t\t\t\t\tconsole.log(cartTotal);\n\t\t\t\t\treturn cartTotal;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttotal: 0,\n\t\t\t\t\tamount: 0,\n\t\t\t\t}\n\t\t\t)\n\t\t\t.map((cartTotal, cartItem) => {\n\t\t\t\tconsole.log(cartTotal, cartItem);\n\t\t\t});\n\n\t\treturn { ...state, total, amount };\n\t}\n\n\treturn state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}